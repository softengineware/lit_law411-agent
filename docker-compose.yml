version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: lit_law411_postgres
    environment:
      POSTGRES_USER: lit_law411
      POSTGRES_PASSWORD: lit_law411_password
      POSTGRES_DB: lit_law411
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lit_law411"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache and Message Broker
  redis:
    image: redis:7-alpine
    container_name: lit_law411_redis
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Elasticsearch for Full-text Search
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: lit_law411_elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Kibana (optional, for Elasticsearch visualization)
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: lit_law411_kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    profiles:
      - debug

  # Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: lit_law411_app
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://lit_law411:lit_law411_password@postgres:5432/lit_law411
      - REDIS_URL=redis://redis:6379
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    ports:
      - "8000:8000"
    volumes:
      - ./src:/app/src:ro
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload

  # Celery Worker
  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: lit_law411_celery_worker
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://lit_law411:lit_law411_password@postgres:5432/lit_law411
      - REDIS_URL=redis://redis:6379
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    volumes:
      - ./src:/app/src:ro
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A src.workers.celery_app worker --loglevel=info

  # Celery Beat (Scheduler)
  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: lit_law411_celery_beat
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://lit_law411:lit_law411_password@postgres:5432/lit_law411
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./src:/app/src:ro
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A src.workers.celery_app beat --loglevel=info

  # Flower (Celery monitoring)
  flower:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: lit_law411_flower
    env_file:
      - .env
    environment:
      - REDIS_URL=redis://redis:6379
    ports:
      - "5555:5555"
    depends_on:
      - redis
    command: celery -A src.workers.celery_app flower
    profiles:
      - debug

volumes:
  postgres_data:
  redis_data:
  elasticsearch_data: